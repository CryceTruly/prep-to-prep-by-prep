{"version":3,"sources":["components/GradeItem.js","components/GradeList.js","components/common/Form.js","components/FormView.js","components/Form.js","index.js"],"names":["GradeItem","props","grade","deleteGrade","editGrade","key","id","subject","score","classame","onClick","className","GradeList","total","grades","shouldEdit","i","length","undefined","parseInt","map","Form","onSubmit","onChange","btnCls","btnText","cardTitle","closeEdit","selectedGrade","onEditSubmit","event","name","type","placeholder","defaultValue","value","FormView","state","subjectExists","exists","forEach","Object","values","preventDefault","newGrade","setState","target","index","arr","newArray","splice","item","updatedGrade","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90bd8176.chunk.js","sourcesContent":["import React from 'react'\n\nconst GradeItem =props=> {\n    const {grade,deleteGrade,editGrade}=props;\n    return (\n      <tr key={grade.id}><td>{grade.subject}</td><td>{grade.score}</td>\n      <td><button classame='btn btn-sm' onClick={()=>editGrade(grade)}>Edit</button>\n        </td><td className='text-danger btn btn-outline' onClick={()=>deleteGrade(grade.id)}>X</td></tr>   \n    )\n}\n\nexport default GradeItem\n\n\n//TODO\n//AFTER DELETE CHECK DELETED @SELECTED","import React from 'react'\nimport GradeItem from './GradeItem';\n\nconst GradeList= props=>{\n    let total=0\n    const {grades,deleteGrade,editGrade,shouldEdit}=props;\n        for(let i=0;i<=grades.length;i++){\n            if(grades[i]!==undefined){\n               total+= parseInt(grades[i].score);\n            }\n         }\n        return (\n            <div className='container'>\n                <h4 className='text-muted'>All grades</h4>\n                {grades.length>0?(\n                    <table className='table table-stripped'>\n                    <thead>\n                        <tr><th>Subject</th><th>Score</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                    \n                        {grades.map(grade=>(\n                            <GradeItem grade={grade} key={grade.id} deleteGrade={deleteGrade} editGrade={editGrade} shouldEdit={shouldEdit}/>\n                        ))}\n                       <tr><td>Total</td><td className='lead text-dark'>{total}</td></tr>\n                    </tbody>\n                </table>\n                ):(<p>No Grades yet</p>)}\n                \n                \n            </div>\n        )\n    }\n\n    export default GradeList;\n","import React from 'react'\n\nconst Form=props=> {\n    const {onSubmit,onChange,btnCls,btnText,cardTitle,closeEdit,selectedGrade,onEditSubmit}=props;\n   \n    return (\n        <div>\n        <h5 className=\"card-title text-mute\">{cardTitle} {selectedGrade.id?(<button className={'btn btn-sm btn-warning'} onClick={closeEdit}>x</button>):(null)} </h5> \n        <form onSubmit={!selectedGrade.id?onSubmit:((event)=>{onEditSubmit(event,selectedGrade)})}>\n              <div className=\"row\">\n                <div className=\"col\">\n                <input className='form-control' name='subject' onChange={onChange} type='text' placeholder='Enter Subject' defaultValue={selectedGrade.subject}/>\n                </div>\n                <div className=\"col\">\n                <input name='score' className='form-control' type='number' onChange={onChange}  placeholder='Enter Score' defaultValue={selectedGrade.score}/>\n                </div>\n            <div className=\"col\">\n            <input type='submit' className={btnCls} value={btnText}/>\n            </div>\n                </div>\n            </form>\n        \n        </div>\n    )\n}\n\nexport default Form\n","import React from 'react'\nimport GradeList from './GradeList';\nimport Form from './common/Form';\n\n\nconst  FormView=props=> {\n    const {onSubmit,onChange,grades,deleteGrade,editGrade,shouldEdit,closeEdit,selectedGrade,onEditSubmit}=props;\n    return (\n      <div className=\"card my-5\">\n      <div className=\"card-body\">\n{shouldEdit?(\n<Form cardTitle={'Edit Grade'} closeEdit={closeEdit} selectedGrade={selectedGrade} onEditSubmit={onEditSubmit} onChange={onChange}  btnText={'Edit'}  btnCls={'btn btn-info'} />\n):(\n    <Form cardTitle={'Add a new student grade'} closeEdit={closeEdit} selectedGrade={selectedGrade} onSubmit={onSubmit} onChange={onChange} btnText={'Add'} btnCls={'btn btn-primary'}  />\n)}\n</div>\n            <GradeList grades={grades} deleteGrade={deleteGrade} editGrade={editGrade} shouldEdit={shouldEdit}/>\n            </div>\n    )\n}\n\nexport default FormView\n","import React from 'react';\nimport FormView from './FormView';\n\n\nclass Form extends React.Component{\n\n    state={\n        grades:[],\n        selectedGrade:{},\n        shouldEdit:false\n    }\n\n    subjectExists=subject=>{\n        let exists=false\n        this.state.grades.forEach(grade=>{\n            if(subject===Object.values(grade)[0]){\n                exists= true;\n            }\n        })\n        return exists;\n    }\n\n    onSubmit=(event)=>{\n        event.preventDefault();\n        const {subject,score}=this.state;\n        const newGrade={subject,score,id:this.state.grades.length+1};\n        if(subject!==''&& score>0 && score<=100 && !this.subjectExists(subject)){\n                this.setState({grades:[...this.state.grades,newGrade]})\n               }\n    }\n  \n    onChange=(event)=>{\n        this.setState({[event.target.name]:event.target.value});\n        \n        \n    }\n    deleteGrade=id=>{\n           this.state.grades.forEach((grade,index,arr)=>{\n               if(grade.id===id){\n                const newArray=[...this.state.grades];\n                newArray.splice(index,1);\n                this.setState({grades:newArray});\n    }\n}\n)\n}\n\ncloseEdit=()=>{\n    this.setState({shouldEdit:false,selectedGrade:{}})\n};\n\neditGrade=grade=>{\nthis.setState({selectedGrade:grade,shouldEdit:true});\n};\n\nonEditSubmit=(event,item)=>{\n    event.preventDefault();\n    const {subject,score}=this.state;\n    const updatedGrade={subject,score,id:item.id};\n    if(subject!==''&& score>0 && score<=100){\n        const grades=this.state.grades.map(grade=>grade.id===item.id?updatedGrade:grade)\n        this.setState({\n            grades:grades,shouldEdit:false,selectedGrade:{}})\n\n           }\n}\n\n    render(){\n        return (\n              <FormView onChange={this.onChange} onSubmit={this.onSubmit} grades={this.state.grades} deleteGrade={this.deleteGrade} editGrade={this.editGrade} shouldEdit={this.state.shouldEdit} closeEdit={this.closeEdit} onEditSubmit={this.onEditSubmit} selectedGrade={this.state.selectedGrade}/>\n        )\n    }\n}\n\nexport default Form;\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport Form from './components/Form';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nconst App=()=><div className='container'><Form/></div>\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}